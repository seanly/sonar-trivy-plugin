package org.sonarsource.plugins.trivy.config;

import org.sonar.api.server.rule.RulesDefinition;
import org.sonar.api.rule.Severity;
import org.sonar.api.rules.RuleType;

/**
 * Trivy Vulnerability Rules Definition
 */
public class TrivyVulnerabilityRulesDefinition implements RulesDefinition {

    public static final String REPOSITORY_KEY = "trivy";
    public static final String REPOSITORY_NAME = "Trivy Vulnerability Scanner";

    @Override
    public void define(Context context) {
        NewRepository repository = context.createRepository(REPOSITORY_KEY, "java")
                .setName(REPOSITORY_NAME);

        // Define Critical severity rule
        NewRule criticalRule = repository.createRule("critical")
                .setName("Critical Security Vulnerability")
                .setHtmlDescription("Critical security vulnerability detected by Trivy scanner")
                .setSeverity(Severity.CRITICAL)
                .setType(RuleType.VULNERABILITY);

        // Define High severity rule
        NewRule highRule = repository.createRule("high")
                .setName("High Security Vulnerability")
                .setHtmlDescription("High security vulnerability detected by Trivy scanner")
                .setSeverity(Severity.MAJOR)
                .setType(RuleType.VULNERABILITY);

        // Define Medium severity rule
        NewRule mediumRule = repository.createRule("medium")
                .setName("Medium Security Vulnerability")
                .setHtmlDescription("Medium security vulnerability detected by Trivy scanner")
                .setSeverity(Severity.MINOR)
                .setType(RuleType.VULNERABILITY);

        // Define Low severity rule
        NewRule lowRule = repository.createRule("low")
                .setName("Low Security Vulnerability")
                .setHtmlDescription("Low security vulnerability detected by Trivy scanner")
                .setSeverity(Severity.INFO)
                .setType(RuleType.VULNERABILITY);

        repository.done();
    }
} 